{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","showModal","handleHide","selectedModal","todoElements","map","todo","id","title","completed","className","type","onClick","TodoFilter","select","search","value","clearSearch","onChange","placeholder","length","style","pointerEvents","Loader","TodoModal","closeModal","useState","user","setUser","isLoading","setIsLoading","useEffect","fetch","userId","then","response","json","userFromServer","setTimeout","href","email","name","App","setTodos","isModalOpen","setIsModalOpen","selectedTodo","setSelectedTodo","filteredTodos","setFilteredTodos","setSearch","selectedFilter","setSelectedFilter","setSelectedModal","todosFromServer","filter","titleMatch","toLowerCase","includes","filterMatch","event","option","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79c40802.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  showModal: (todo: Todo) => void,\n  handleHide: (id: number) => void,\n  selectedModal: number,\n}\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  showModal,\n  handleHide,\n  selectedModal,\n}) => {\n  const todoElements = todos.map(todo => {\n    const { id, title, completed } = todo;\n\n    return (\n      <tr\n        data-cy=\"todo\"\n        className=\"\"\n        key={id}\n      >\n        <td className=\"is-vcentered\">{id}</td>\n        <td className=\"is-vcentered\">\n          {completed\n            && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n        </td>\n        <td className=\"is-vcentered is-expanded\">\n          <p className={completed ? 'has-text-success' : 'has-text-danger'}>\n            {title}\n          </p>\n        </td>\n        <td className=\"has-text-right is-vcentered\">\n          <button\n            data-cy=\"selectButton\"\n            className=\"button\"\n            type=\"button\"\n            onClick={() => {\n              showModal(todo);\n              handleHide(id);\n            }}\n          >\n            <span className=\"icon\">\n              <i className={`far ${selectedModal === id ? 'fa-eye-slash' : 'fa-eye'}`} />\n            </span>\n          </button>\n        </td>\n      </tr>\n    );\n  });\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todoElements}\n      </tbody>\n    </table>\n  );\n};\n","interface Props {\n  select: (event: React.ChangeEvent<HTMLSelectElement>) => void,\n  search: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  value: string,\n  clearSearch: () => void,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  select,\n  search,\n  value,\n  clearSearch,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={select}>\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={value}\n          onChange={search}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {value.length > 0\n         && (\n           <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n             {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n             <button\n               data-cy=\"clearSearchButton\"\n               type=\"button\"\n               className=\"delete\"\n               onClick={clearSearch}\n             />\n           </span>\n         )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ninterface TodoModalProps {\n  todo: Todo | undefined,\n  closeModal: () => void\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, closeModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // eslint-disable-next-line max-len\n    fetch(`https://mate-academy.github.io/react_dynamic-list-of-todos/api/users/${todo?.userId}.json`)\n      .then(response => response.json())\n      .then(userFromServer => {\n        setTimeout(() => {\n          setUser(userFromServer);\n          setIsLoading(false);\n        }, 10);\n      });\n  }, [user]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo>();\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [search, setSearch] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState('');\n  const [selectedModal, setSelectedModal] = useState<number>(0);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    // eslint-disable-next-line max-len\n    fetch('https://mate-academy.github.io/react_dynamic-list-of-todos/api/todos.json')\n      .then(response => response.json())\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n        setFilteredTodos(todosFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!search.length && !selectedFilter.length) {\n      setFilteredTodos(todos);\n    } else {\n      setFilteredTodos(todos.filter(todo => {\n        const titleMatch = todo.title.toLowerCase().includes(search.toLowerCase());\n        let filterMatch = false;\n\n        switch (selectedFilter) {\n          case '':\n            filterMatch = true;\n            break;\n          case 'active':\n            filterMatch = !todo.completed;\n            break;\n          case 'completed':\n            filterMatch = todo.completed;\n            break;\n          case 'all':\n            filterMatch = true;\n            break;\n          default: filterMatch = false;\n        }\n\n        return titleMatch && filterMatch;\n      }));\n    }\n  }, [search, selectedFilter]);\n\n  const showModal = (todo: Todo) => {\n    setIsModalOpen(true);\n    setSelectedTodo(todo);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedModal(0);\n  };\n\n  const handleSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setSearch(value);\n  };\n\n  const handleSearchClear = () => {\n    setSearch('');\n  };\n\n  const handleSelectFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const option = event.target.value;\n\n    setSelectedFilter(option);\n  };\n\n  const handleHideModal = (id: number) => {\n    setSelectedModal(id);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                select={handleSelectFilter}\n                search={handleSearch}\n                value={search}\n                clearSearch={handleSearchClear}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              <TodoList\n                todos={filteredTodos}\n                showModal={showModal}\n                handleHide={handleHideModal}\n                selectedModal={selectedModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {isModalOpen && <TodoModal todo={selectedTodo} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}